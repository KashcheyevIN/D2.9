from news_portal.models import *

#1#Создать двух пользователей (с помощью метода User.objects.create_user('username')).#
u1 = User.objects.create_user (username= 'Ivan')
u2 = User.objects.create_user (username= 'Masha')

#2#Создать два объекта модели Author, связанные с пользователями.#
Author.objects.create(author_user=u1)
Author.objects.create(author_user=u2)

#3#Добавить 4 категории в модель Category.#
Category.objects.create(category_name='Cat')
Category.objects.create(category_name='Dog')
Category.objects.create(category_name='Rabbit')
Category.objects.create(category_name='Cow')

#4#Добавить 2 статьи и 1 новость.#
author1=Author.objects.get(id=1)
author2=Author.objects.get(id=2)
Post.objects.create(author=author1, categoryType = 'NEW', title= 'Animals from Moscow', text = 'Animals from Moscow')
Post.objects.create(author=author2, categoryType = 'ART', title= 'Animals from Kazan', text = 'Animals from Kazan')
Post.objects.create(author=author2, categoryType = 'ART', title= 'Animals from Ufa', text = 'Animals from Ufa')

#5#Присвоить им категории (как минимум в одной статье/новости должно быть не меньше 2 категорий).#
Post.objects.get(id=1).postCategory.add(Category.objects.get(id=1))
Post.objects.get(id=1).postCategory.add(Category.objects.get(id=2))
Post.objects.get(id=2).postCategory.add(Category.objects.get(id=3))
Post.objects.get(id=3).postCategory.add(Category.objects.get(id=4))

#6#Создать как минимум 4 комментария к разным объектам модели Post (в каждом объекте должен быть как минимум один комментарий).#
Comment.objects.create(commentPost=Post.objects.get(id=1),commentUser=Author.objects.get(id=1).author_user, text = 'anytext')
Comment.objects.create(commentPost=Post.objects.get(id=1),commentUser=Author.objects.get(id=2).author_user, text = 'anytext')
Comment.objects.create(commentPost=Post.objects.get(id=2),commentUser=Author.objects.get(id=1).author_user, text = 'anytext')
Comment.objects.create(commentPost=Post.objects.get(id=3),commentUser=Author.objects.get(id=2).author_user, text = 'anytext')

#7#Применяя функции like() и dislike() к статьям/новостям и комментариям, скорректировать рейтинги этих объектов.#
Comment.objects.get(id=1).like()
Comment.objects.get(id=2).like()
Comment.objects.get(id=2).like()
Comment.objects.get(id=3).dislike()
Comment.objects.get(id=4).dislike()
Comment.objects.get(id=4).dislike()
Comment.objects.get(id=1).rating
Comment.objects.get(id=2).rating
Comment.objects.get(id=3).rating
Comment.objects.get(id=4).rating

#8#Обновить рейтинги пользователей.#
a=Author.objects.get(id=1)
b=Author.objects.get(id=2)
a.update_rating()
b.update_rating()

#9#Вывести username и рейтинг лучшего пользователя (применяя сортировку и возвращая поля первого объекта).#
a=Author.objects.order_by('-author_rating')[:1]
for i in a:
	i.author_rating
	i.author_user.username

#10#Вывести дату добавления, username автора, рейтинг, заголовок и превью лучшей статьи, основываясь на лайках/дислайках к этой статье.#
a = Post.objects.order_by('-rating').values('dateCreation', 'Author.author_user.username', 'rating', 'title')[0]
Post.objects.order_by('-rating')
Post.objects.order_by('-rating')[0]
Post.objects.order_by('-rating')[0].preview()

#11#Вывести все комментарии (дата, пользователь, рейтинг, текст) к этой статье.#
Post.objects.order_by('-rating')[0]
Post.objects.order_by('-rating')[0].comment_set.all()
Post.objects.order_by('-rating')[0].comment_set.all().values('dataCreation', 'commentUser', 'rating', 'text')
































